/*******************************************************************************
 * Copyright (c) 2000, 2017 IBM Corporation and others.
 * Copyright (c) 2022-2023 BIA-Technologies Limited Liability Company.
 *
 * This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License 2.0
 * which accompanies this distribution, and is available at
 * https://www.eclipse.org/legal/epl-2.0/, or the Apache License, Version 2.0
 * which is available at https://www.apache.org/licenses/LICENSE-2.0.
 *
 * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0
 *
 * Contributors:
 *     IBM Corporation - initial API and implementation
 *     Andreas Schmid, service@aaschmid.de - Locate test method even if it contains parameters - http://bugs.eclipse.org/343935
 *     BIA-Technologies LLC - adaptation for EDT
 *******************************************************************************/
package ru.biatech.edt.junit.ui.report.actions;

import org.eclipse.jface.dialogs.MessageDialog;
import ru.biatech.edt.junit.model.TestCaseElement;
import ru.biatech.edt.junit.services.TestsManager;
import ru.biatech.edt.junit.ui.JUnitMessages;
import ru.biatech.edt.junit.ui.report.TestRunnerViewPart;
import ru.biatech.edt.junit.ui.viewsupport.ImageProvider;
import ru.biatech.edt.junit.v8utils.MethodReference;
import ru.biatech.edt.junit.yaxunit.Engine;

import java.util.Objects;

/**
 * Действие для перехода к тесту
 */
public class OpenTestAction extends OpenEditorAction {

  public OpenTestAction(TestRunnerViewPart testRunnerPart, TestCaseElement testCase) {
    this(testRunnerPart, testCase.getClassName());
  }

  public OpenTestAction(TestRunnerViewPart testRunnerPart, String testClassName) {
    super(JUnitMessages.OpenTestAction_label, ImageProvider.ACTION_GOTO_TESTSUITE, testRunnerPart, testClassName);
  }

  @Override
  protected MethodReference getPosition() {
    var project = getLaunchedProject();

    MethodReference ref;
    if (project != null) {
      ref = TestsManager.getMethodReference(project, fClassName);
    } else {
      ref = Engine.getTestProjects()
          .map(p -> TestsManager.getMethodReference(p, fClassName))
          .filter(Objects::nonNull)
          .findFirst()
          .orElse(null);
    }
    if (ref == null) {
      MessageDialog.openError(fTestRunner.getShell(),
          JUnitMessages.OpenTestAction_label,
          JUnitMessages.OpenTestAction_error_not_found);
    }
    return ref;
  }
}
